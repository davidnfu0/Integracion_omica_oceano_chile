[
  {
    "objectID": "reports/mofa_pca_analysis.html",
    "href": "reports/mofa_pca_analysis.html",
    "title": "MOFA & PCA analysis",
    "section": "",
    "text": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport mofax as mofa\nimport numpy as np"
  },
  {
    "objectID": "reports/mofa_pca_analysis.html#pca-analysis",
    "href": "reports/mofa_pca_analysis.html#pca-analysis",
    "title": "MOFA & PCA analysis",
    "section": "PCA analysis",
    "text": "PCA analysis\n\ndata_dir = \"../data/\"\npca_transformed = pd.read_csv(data_dir + \"M_pca.csv\", index_col=0)\n\n\nplt.figure(figsize=(10, 7))\nscatter = plt.scatter(\n    pca_transformed[\"PCA1\"],\n    pca_transformed[\"PCA2\"],\n    c=pca_transformed[\"PCA3\"],\n    cmap=\"viridis\",\n    s=20,\n)\nplt.xlabel(\"PCA 1\")\nplt.ylabel(\"PCA 2\")\nplt.title(\"PCA 2D\")\nplt.colorbar(scatter, label=\"PCA 3\")\nplt.grid()\nplt.show()"
  },
  {
    "objectID": "reports/mofa_pca_analysis.html#mofa-analysis",
    "href": "reports/mofa_pca_analysis.html#mofa-analysis",
    "title": "MOFA & PCA analysis",
    "section": "MOFA analysis",
    "text": "MOFA analysis\n\nZ_df = pd.read_csv(data_dir + \"M_factors.csv\", index_col=0)\nvariance_explained_pivot = pd.read_csv(\n    data_dir + \"M_variance_explained.csv\", index_col=0\n)\ndf_W_biogeochemical_genes = pd.read_csv(\n    data_dir + \"W_biogeochemical_genes.csv\", index_col=0\n)\ndf_W_metabolic_genes = pd.read_csv(data_dir + \"W_metabolic_genes.csv\", index_col=0)\ndf_W_Taxa_order = pd.read_csv(data_dir + \"W_Taxa_order.csv\", index_col=0)\ndf_W_Taxa_phylum = pd.read_csv(data_dir + \"W_Taxa_phylum.csv\", index_col=0)\n\n\nplt.figure(figsize=(10, 6))\nscatter = plt.scatter(\n    Z_df[\"Factor_2\"], Z_df[\"Factor_1\"], c=Z_df[\"Factor_3\"], cmap=\"viridis\", s=20\n)\nplt.title(\"MOFA Factors\")\nplt.xlabel(\"Factor 2\")\nplt.ylabel(\"Factor 1\")\nplt.colorbar(scatter, label=\"Factor 3\")\nplt.grid()\nplt.show()\n\n\n\n\n\n\n\n\n\nfig, axs = plt.subplots(1, 2, figsize=(18, 7))\n\nscatter1 = axs[0].scatter(\n    Z_df[\"Factor_1\"], Z_df[\"Factor_2\"], c=Z_df[\"Factor_3\"], cmap=\"viridis\", s=20\n)\naxs[0].set_title(\"MOFA Factors\")\naxs[0].set_xlabel(\"Factor 1\")\naxs[0].set_ylabel(\"Factor 2\")\nfig.colorbar(scatter1, ax=axs[0], label=\"Factor 3\")\naxs[0].grid()\n\nscatter2 = axs[1].scatter(\n    pca_transformed[\"PCA1\"],\n    pca_transformed[\"PCA2\"],\n    c=pca_transformed[\"PCA3\"],\n    cmap=\"viridis\",\n    s=20,\n)\naxs[1].set_title(\"PCA Components\")\naxs[1].set_xlabel(\"PCA 1\")\naxs[1].set_ylabel(\"PCA 2\")\nfig.colorbar(scatter2, ax=axs[1], label=\"PCA 3\")\naxs[1].grid()\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nfig, axs = plt.subplots(1, 2, figsize=(18, 7))\n\nscatter1 = axs[0].scatter(\n    Z_df[\"Factor_2\"], Z_df[\"Factor_1\"], c=Z_df[\"Factor_3\"], cmap=\"viridis\", s=20\n)\naxs[0].set_title(\"MOFA Factors\")\naxs[0].set_xlabel(\"Factor 2\")\naxs[0].set_ylabel(\"Factor 1\")\nfig.colorbar(scatter1, ax=axs[0], label=\"Factor 3\")\naxs[0].grid()\n\nscatter2 = axs[1].scatter(\n    pca_transformed[\"PCA1\"],\n    pca_transformed[\"PCA2\"],\n    c=pca_transformed[\"PCA3\"],\n    cmap=\"viridis\",\n    s=20,\n)\naxs[1].set_title(\"PCA Components\")\naxs[1].set_xlabel(\"PCA 1\")\naxs[1].set_ylabel(\"PCA 2\")\nfig.colorbar(scatter2, ax=axs[1], label=\"PCA 3\")\naxs[1].grid()\n\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nplt.imshow(variance_explained_pivot, aspect=\"auto\", cmap=\"Blues\")\nplt.xticks(\n    ticks=range(len(variance_explained_pivot.columns)),\n    labels=variance_explained_pivot.columns,\n    rotation=45,\n)\nplt.yticks(\n    ticks=range(len(variance_explained_pivot.index)),\n    labels=variance_explained_pivot.index,\n)\nplt.colorbar(label=\"R2 (%)\")\nplt.title(\"Variance Explained per Factor and View\")\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\nfig, axs = plt.subplots(10, 1, figsize=(18, 26), sharex=True)\nfeature_tables = []\n\nfor i in range(10):\n    factor = f\"Factor_{i + 1}\"\n    weights = df_W_biogeochemical_genes[factor]\n    axs[i].plot(weights.values, label=factor, alpha=0.7, linewidth=2)\n    top_idx = weights.abs().nlargest(10).index\n    top_pos = [df_W_biogeochemical_genes.index.get_loc(idx) for idx in top_idx]\n    axs[i].scatter(top_pos, weights.loc[top_idx].values, color=\"red\", s=50, zorder=3)\n    for pos, idx in zip(top_pos, top_idx):\n        axs[i].text(\n            pos,\n            weights.loc[idx],\n            str(pos),  # Muestra el número de feature\n            color=\"black\",\n            fontsize=12,\n            ha=\"right\",\n            va=\"bottom\",\n            rotation=45,\n        )\n    # Guarda la tabla de asociación para este factor\n    feature_tables.append(\n        pd.DataFrame({\"Feature_number\": top_pos, \"Feature_name\": top_idx})\n    )\n    axs[i].set_title(f\"Features weights in biogeochemical_genes - {factor}\")\n    axs[i].set_ylabel(\"Weight\")\n    axs[i].legend(loc=\"upper right\")\n    axs[i].set_xticks([])\n    axs[i].set_ylim(\n        weights.min() * (1.8),\n        weights.max() * (1.8),\n    )\n    axs[i].grid()\nplt.tight_layout()\nplt.show()\n\nfor i, table in enumerate(feature_tables):\n    print(f\"\\nTabla de asociación para {f'Factor_{i + 1}'}:\")\n    display(table)\n\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_1:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n50\nsat\n\n\n1\n8\ncoxm\n\n\n2\n18\ncysi\n\n\n3\n15\ncysc\n\n\n4\n21\ncysm\n\n\n5\n9\ncoxs\n\n\n6\n17\ncysh\n\n\n7\n12\ncpet\n\n\n8\n41\npetc\n\n\n9\n7\ncoxl\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_2:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n15\ncysc\n\n\n1\n41\npetc\n\n\n2\n8\ncoxm\n\n\n3\n17\ncysh\n\n\n4\n18\ncysi\n\n\n5\n6\naprb\n\n\n6\n50\nsat\n\n\n7\n20\ncysk\n\n\n8\n21\ncysm\n\n\n9\n9\ncoxs\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_3:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n17\ncysh\n\n\n1\n18\ncysi\n\n\n2\n8\ncoxm\n\n\n3\n15\ncysc\n\n\n4\n19\ncysj\n\n\n5\n36\nnirk\n\n\n6\n50\nsat\n\n\n7\n44\nprkb\n\n\n8\n21\ncysm\n\n\n9\n39\nnosz\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_4:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n8\ncoxm\n\n\n1\n21\ncysm\n\n\n2\n50\nsat\n\n\n3\n41\npetc\n\n\n4\n9\ncoxs\n\n\n5\n6\naprb\n\n\n6\n18\ncysi\n\n\n7\n44\nprkb\n\n\n8\n15\ncysc\n\n\n9\n22\ncysn\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_5:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n6\naprb\n\n\n1\n9\ncoxs\n\n\n2\n41\npetc\n\n\n3\n16\ncysd\n\n\n4\n35\nnira\n\n\n5\n50\nsat\n\n\n6\n7\ncoxl\n\n\n7\n22\ncysn\n\n\n8\n46\npsba\n\n\n9\n21\ncysm\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_6:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n8\ncoxm\n\n\n1\n35\nnira\n\n\n2\n46\npsba\n\n\n3\n18\ncysi\n\n\n4\n12\ncpet\n\n\n5\n7\ncoxl\n\n\n6\n44\nprkb\n\n\n7\n9\ncoxs\n\n\n8\n42\npete\n\n\n9\n6\naprb\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_7:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n35\nnira\n\n\n1\n46\npsba\n\n\n2\n21\ncysm\n\n\n3\n36\nnirk\n\n\n4\n39\nnosz\n\n\n5\n7\ncoxl\n\n\n6\n31\nnasa\n\n\n7\n20\ncysk\n\n\n8\n16\ncysd\n\n\n9\n19\ncysj\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_8:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n46\npsba\n\n\n1\n41\npetc\n\n\n2\n45\npsaa\n\n\n3\n35\nnira\n\n\n4\n49\nrbcs\n\n\n5\n43\npeth\n\n\n6\n48\nrbcl\n\n\n7\n44\nprkb\n\n\n8\n17\ncysh\n\n\n9\n9\ncoxs\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_9:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n35\nnira\n\n\n1\n49\nrbcs\n\n\n2\n29\nnapa\n\n\n3\n15\ncysc\n\n\n4\n0\nabfd\n\n\n5\n48\nrbcl\n\n\n6\n6\naprb\n\n\n7\n30\nnarb\n\n\n8\n1\nacs\n\n\n9\n24\nlhca1\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_10:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n36\nnirk\n\n\n1\n35\nnira\n\n\n2\n46\npsba\n\n\n3\n19\ncysj\n\n\n4\n12\ncpet\n\n\n5\n15\ncysc\n\n\n6\n17\ncysh\n\n\n7\n9\ncoxs\n\n\n8\n50\nsat\n\n\n9\n6\naprb\n\n\n\n\n\n\n\n\nfig, axs = plt.subplots(10, 1, figsize=(18, 26), sharex=True)\nfeature_tables = []\n\nfor i in range(10):\n    factor = f\"Factor_{i + 1}\"\n    weights = df_W_metabolic_genes[factor]\n    top_idx = weights.abs().nlargest(10).index\n    top_pos = [df_W_metabolic_genes.index.get_loc(idx) for idx in top_idx]\n    axs[i].plot(weights.values, label=factor, alpha=0.7, linewidth=2)\n    axs[i].scatter(top_pos, weights.loc[top_idx].values, color=\"red\", s=50, zorder=3)\n    for pos, idx in zip(top_pos, top_idx):\n        axs[i].text(\n            pos,\n            weights.loc[idx],\n            str(pos),\n            color=\"black\",\n            fontsize=12,\n            ha=\"right\",\n            va=\"bottom\",\n            rotation=45,\n        )\n    feature_tables.append(\n        pd.DataFrame({\"Feature_number\": top_pos, \"Feature_name\": top_idx})\n    )\n    axs[i].set_title(f\"Features weights in metabolic_genes - {factor}\")\n    axs[i].set_ylabel(\"Weight\")\n    axs[i].legend(loc=\"upper right\")\n    axs[i].set_xticks([])\n    axs[i].set_ylim(\n        weights.min() * (1.8),\n        weights.max() * (1.8),\n    )\n    axs[i].grid()\nplt.tight_layout()\nplt.show()\n\nfor i, table in enumerate(feature_tables):\n    print(f\"\\nTabla de asociación para {f'Factor_{i + 1}'}:\")\n    display(table)\n\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_1:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n825\ncrti\n\n\n1\n820\ncrtb\n\n\n2\n2336\nnarh\n\n\n3\n2337\nnari\n\n\n4\n837\ncrty\n\n\n5\n852\nctae\n\n\n6\n1649\nhemf\n\n\n7\n3607\nubih\n\n\n8\n547\nbsaa\n\n\n9\n2129\nmeth\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_2:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n3279\nsera\n\n\n1\n1203\nfabg\n\n\n2\n85\nacsa\n\n\n3\n2215\nmrp\n\n\n4\n1305\nfold\n\n\n5\n1436\ngcvh\n\n\n6\n163\nahcy\n\n\n7\n403\natpd\n\n\n8\n131\nadk\n\n\n9\n1088\ndxs\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_3:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n2336\nnarh\n\n\n1\n2337\nnari\n\n\n2\n2335\nnarg\n\n\n3\n2882\nporb\n\n\n4\n3086\npyrb\n\n\n5\n400\natpa\n\n\n6\n404\natpe\n\n\n7\n3467\ntaud\n\n\n8\n1306\nfole\n\n\n9\n1579\nguaa\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_4:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n2467\nnrdf\n\n\n1\n3515\nthya\n\n\n2\n359\naspc\n\n\n3\n2903\nppdk\n\n\n4\n1552\ngpma\n\n\n5\n1554\ngpmi\n\n\n6\n3148\nrfaf\n\n\n7\n2464\nnrdb\n\n\n8\n3224\nrsga\n\n\n9\n1790\nilva\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_5:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n3346\nsoxa\n\n\n1\n1200\nfabb\n\n\n2\n775\ncoxb\n\n\n3\n3347\nsoxb\n\n\n4\n2129\nmeth\n\n\n5\n2710\npetb\n\n\n6\n3601\nubib\n\n\n7\n2270\nmuri\n\n\n8\n1199\nfaba\n\n\n9\n1797\nilvi\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_6:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n775\ncoxb\n\n\n1\n911\ncysg\n\n\n2\n971\ndeoc\n\n\n3\n2127\nmetf\n\n\n4\n851\nctad\n\n\n5\n3061\npurh\n\n\n6\n725\ncobb\n\n\n7\n2433\nnira\n\n\n8\n3056\npurb\n\n\n9\n3269\nsdhd\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_7:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n2433\nnira\n\n\n1\n1856\nkatg\n\n\n2\n3061\npurh\n\n\n3\n356\nasns\n\n\n4\n2973\npsba\n\n\n5\n2274\nmuts\n\n\n6\n1204\nfabh\n\n\n7\n917\ncysm\n\n\n8\n2892\nppa\n\n\n9\n2510\nnuoe\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_8:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n2710\npetb\n\n\n1\n2976\npsbd\n\n\n2\n402\natpc\n\n\n3\n2709\npeta\n\n\n4\n910\ncyse\n\n\n5\n2954\npsab\n\n\n6\n2979\npsbh\n\n\n7\n2955\npsac\n\n\n8\n2953\npsaa\n\n\n9\n825\ncrti\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_9:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n355\nasnb\n\n\n1\n1467\nglce\n\n\n2\n1466\nglcd\n\n\n3\n1102\neda\n\n\n4\n2238\nmtla\n\n\n5\n331\narok\n\n\n6\n3617\nugpq\n\n\n7\n1526\ngnd\n\n\n8\n2976\npsbd\n\n\n9\n2932\nprma\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_10:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n1856\nkatg\n\n\n1\n405\natpf\n\n\n2\n3454\ntal\n\n\n3\n2892\nppa\n\n\n4\n1677\nhisi\n\n\n5\n964\nddl\n\n\n6\n1503\ngltb\n\n\n7\n402\natpc\n\n\n8\n820\ncrtb\n\n\n9\n297\narcc\n\n\n\n\n\n\n\n\nfig, axs = plt.subplots(10, 1, figsize=(18, 26), sharex=True)\nfeature_tables = []\n\nfor i in range(10):\n    factor = f\"Factor_{i + 1}\"\n    weights = df_W_Taxa_order[factor]\n    top_idx = weights.abs().nlargest(10).index\n    top_pos = [df_W_Taxa_order.index.get_loc(idx) for idx in top_idx]\n    axs[i].plot(weights.values, label=factor, alpha=0.7, linewidth=2)\n    axs[i].scatter(top_pos, weights.loc[top_idx].values, color=\"red\", s=50, zorder=3)\n    for pos, idx in zip(top_pos, top_idx):\n        axs[i].text(\n            pos,\n            weights.loc[idx],\n            str(pos),  # Muestra el número de feature\n            color=\"black\",\n            fontsize=12,\n            ha=\"right\",\n            va=\"bottom\",\n            rotation=45,\n        )\n    # Guarda la tabla de asociación para este factor\n    feature_tables.append(\n        pd.DataFrame({\"Feature_number\": top_pos, \"Feature_name\": top_idx})\n    )\n    axs[i].set_title(f\"Features weights in taxa_order - {factor}\")\n    axs[i].set_ylabel(\"Weight\")\n    axs[i].legend(loc=\"upper right\")\n    axs[i].set_xticks([])\n    axs[i].set_ylim(\n        weights.min() * (1.8),\n        weights.max() * (1.8),\n    )\n    axs[i].grid()\nplt.tight_layout()\nplt.show()\n\nfor i, table in enumerate(feature_tables):\n    print(f\"\\nTabla de asociación para {f'Factor_{i + 1}'}:\")\n    display(table)\n\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_1:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n92\nFlavobacteriales\n\n\n1\n354\nGammaproteobacteria order incertae sedis\n\n\n2\n101\nRhodobacterales\n\n\n3\n390\nThaumarchaeota order incertae sedis\n\n\n4\n160\nPelagibacterales\n\n\n5\n230\nBacteria order incertae sedis\n\n\n6\n138\nNitrosopumilales\n\n\n7\n70\nSynechococcales\n\n\n8\n217\nAlphaproteobacteria order incertae sedis\n\n\n9\n337\nDeltaproteobacteria order incertae sedis\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_2:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n354\nGammaproteobacteria order incertae sedis\n\n\n1\n390\nThaumarchaeota order incertae sedis\n\n\n2\n350\nFirmicutes order incertae sedis\n\n\n3\n381\nProteobacteria order incertae sedis\n\n\n4\n216\nActinobacteria order incertae sedis\n\n\n5\n337\nDeltaproteobacteria order incertae sedis\n\n\n6\n70\nSynechococcales\n\n\n7\n160\nPelagibacterales\n\n\n8\n230\nBacteria order incertae sedis\n\n\n9\n138\nNitrosopumilales\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_3:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n390\nThaumarchaeota order incertae sedis\n\n\n1\n160\nPelagibacterales\n\n\n2\n138\nNitrosopumilales\n\n\n3\n350\nFirmicutes order incertae sedis\n\n\n4\n342\nEuryarchaeota order incertae sedis\n\n\n5\n354\nGammaproteobacteria order incertae sedis\n\n\n6\n381\nProteobacteria order incertae sedis\n\n\n7\n337\nDeltaproteobacteria order incertae sedis\n\n\n8\n216\nActinobacteria order incertae sedis\n\n\n9\n101\nRhodobacterales\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_4:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n354\nGammaproteobacteria order incertae sedis\n\n\n1\n160\nPelagibacterales\n\n\n2\n101\nRhodobacterales\n\n\n3\n405\nunassigned\n\n\n4\n350\nFirmicutes order incertae sedis\n\n\n5\n217\nAlphaproteobacteria order incertae sedis\n\n\n6\n50\nCellvibrionales\n\n\n7\n232\nBacteroidetes order incertae sedis\n\n\n8\n138\nNitrosopumilales\n\n\n9\n70\nSynechococcales\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_5:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n354\nGammaproteobacteria order incertae sedis\n\n\n1\n139\nNitrosomonadales\n\n\n2\n50\nCellvibrionales\n\n\n3\n138\nNitrosopumilales\n\n\n4\n23\nAlteromonadales\n\n\n5\n193\nMicrococcales\n\n\n6\n405\nunassigned\n\n\n7\n102\nSphingomonadales\n\n\n8\n217\nAlphaproteobacteria order incertae sedis\n\n\n9\n160\nPelagibacterales\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_6:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n101\nRhodobacterales\n\n\n1\n70\nSynechococcales\n\n\n2\n390\nThaumarchaeota order incertae sedis\n\n\n3\n160\nPelagibacterales\n\n\n4\n230\nBacteria order incertae sedis\n\n\n5\n337\nDeltaproteobacteria order incertae sedis\n\n\n6\n139\nNitrosomonadales\n\n\n7\n342\nEuryarchaeota order incertae sedis\n\n\n8\n405\nunassigned\n\n\n9\n381\nProteobacteria order incertae sedis\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_7:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n230\nBacteria order incertae sedis\n\n\n1\n139\nNitrosomonadales\n\n\n2\n50\nCellvibrionales\n\n\n3\n350\nFirmicutes order incertae sedis\n\n\n4\n193\nMicrococcales\n\n\n5\n23\nAlteromonadales\n\n\n6\n92\nFlavobacteriales\n\n\n7\n232\nBacteroidetes order incertae sedis\n\n\n8\n381\nProteobacteria order incertae sedis\n\n\n9\n405\nunassigned\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_8:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n70\nSynechococcales\n\n\n1\n230\nBacteria order incertae sedis\n\n\n2\n354\nGammaproteobacteria order incertae sedis\n\n\n3\n342\nEuryarchaeota order incertae sedis\n\n\n4\n217\nAlphaproteobacteria order incertae sedis\n\n\n5\n92\nFlavobacteriales\n\n\n6\n216\nActinobacteria order incertae sedis\n\n\n7\n28\nMamiellales\n\n\n8\n390\nThaumarchaeota order incertae sedis\n\n\n9\n337\nDeltaproteobacteria order incertae sedis\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_9:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n405\nunassigned\n\n\n1\n70\nSynechococcales\n\n\n2\n160\nPelagibacterales\n\n\n3\n230\nBacteria order incertae sedis\n\n\n4\n101\nRhodobacterales\n\n\n5\n13\nDehalococcoidales\n\n\n6\n152\nVerrucomicrobiales\n\n\n7\n390\nThaumarchaeota order incertae sedis\n\n\n8\n354\nGammaproteobacteria order incertae sedis\n\n\n9\n216\nActinobacteria order incertae sedis\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_10:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n138\nNitrosopumilales\n\n\n1\n337\nDeltaproteobacteria order incertae sedis\n\n\n2\n101\nRhodobacterales\n\n\n3\n13\nDehalococcoidales\n\n\n4\n92\nFlavobacteriales\n\n\n5\n216\nActinobacteria order incertae sedis\n\n\n6\n23\nAlteromonadales\n\n\n7\n405\nunassigned\n\n\n8\n230\nBacteria order incertae sedis\n\n\n9\n206\nAcidimicrobiia order incertae sedis\n\n\n\n\n\n\n\n\nfig, axs = plt.subplots(10, 1, figsize=(18, 26), sharex=True)\nfeature_tables = []\n\nfor i in range(10):\n    factor = f\"Factor_{i + 1}\"\n    weights = df_W_Taxa_phylum[factor]\n    top_idx = weights.abs().nlargest(10).index\n    top_pos = [df_W_Taxa_phylum.index.get_loc(idx) for idx in top_idx]\n    axs[i].plot(weights.values, label=factor, alpha=0.7, linewidth=2)\n    axs[i].scatter(top_pos, weights.loc[top_idx].values, color=\"red\", s=50, zorder=3)\n    for pos, idx in zip(top_pos, top_idx):\n        axs[i].text(\n            pos,\n            weights.loc[idx],\n            str(pos),\n            color=\"black\",\n            fontsize=12,\n            ha=\"right\",\n            va=\"bottom\",\n            rotation=45,\n        )\n    feature_tables.append(\n        pd.DataFrame({\"Feature_number\": top_pos, \"Feature_name\": top_idx})\n    )\n    axs[i].set_title(f\"Features weights in taxa_phylum - {factor}\")\n    axs[i].set_ylabel(\"Weight\")\n    axs[i].legend(loc=\"upper right\")\n    axs[i].set_xticks([])\n    axs[i].set_ylim(\n        weights.min() * (1.8),\n        weights.max() * (1.8),\n    )\n    axs[i].grid()\nplt.tight_layout()\nplt.show()\n\nfor i, table in enumerate(feature_tables):\n    print(f\"\\nTabla de asociación para {f'Factor_{i + 1}'}:\")\n    display(table)\n\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_1:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n114\nThaumarchaeota\n\n\n1\n131\nBacteroidetes\n\n\n2\n3\nProteobacteria\n\n\n3\n142\nBacteria phylum incertae sedis\n\n\n4\n1\nCyanobacteria\n\n\n5\n90\nActinobacteria\n\n\n6\n4\nFirmicutes\n\n\n7\n5\nNitrospinae\n\n\n8\n100\nChlorophyta\n\n\n9\n85\nChloroflexi\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_2:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n3\nProteobacteria\n\n\n1\n114\nThaumarchaeota\n\n\n2\n4\nFirmicutes\n\n\n3\n90\nActinobacteria\n\n\n4\n1\nCyanobacteria\n\n\n5\n142\nBacteria phylum incertae sedis\n\n\n6\n99\nEuryarchaeota\n\n\n7\n144\nunassigned\n\n\n8\n100\nChlorophyta\n\n\n9\n126\nVerrucomicrobia\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_3:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n3\nProteobacteria\n\n\n1\n114\nThaumarchaeota\n\n\n2\n4\nFirmicutes\n\n\n3\n99\nEuryarchaeota\n\n\n4\n90\nActinobacteria\n\n\n5\n144\nunassigned\n\n\n6\n142\nBacteria phylum incertae sedis\n\n\n7\n1\nCyanobacteria\n\n\n8\n131\nBacteroidetes\n\n\n9\n100\nChlorophyta\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_4:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n3\nProteobacteria\n\n\n1\n144\nunassigned\n\n\n2\n131\nBacteroidetes\n\n\n3\n4\nFirmicutes\n\n\n4\n1\nCyanobacteria\n\n\n5\n85\nChloroflexi\n\n\n6\n142\nBacteria phylum incertae sedis\n\n\n7\n114\nThaumarchaeota\n\n\n8\n99\nEuryarchaeota\n\n\n9\n91\nPlanctomycetes\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_5:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n3\nProteobacteria\n\n\n1\n90\nActinobacteria\n\n\n2\n144\nunassigned\n\n\n3\n4\nFirmicutes\n\n\n4\n99\nEuryarchaeota\n\n\n5\n131\nBacteroidetes\n\n\n6\n85\nChloroflexi\n\n\n7\n114\nThaumarchaeota\n\n\n8\n1\nCyanobacteria\n\n\n9\n142\nBacteria phylum incertae sedis\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_6:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n1\nCyanobacteria\n\n\n1\n114\nThaumarchaeota\n\n\n2\n142\nBacteria phylum incertae sedis\n\n\n3\n99\nEuryarchaeota\n\n\n4\n144\nunassigned\n\n\n5\n3\nProteobacteria\n\n\n6\n4\nFirmicutes\n\n\n7\n126\nVerrucomicrobia\n\n\n8\n9\nGemmatimonadetes\n\n\n9\n131\nBacteroidetes\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_7:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n3\nProteobacteria\n\n\n1\n142\nBacteria phylum incertae sedis\n\n\n2\n4\nFirmicutes\n\n\n3\n90\nActinobacteria\n\n\n4\n131\nBacteroidetes\n\n\n5\n144\nunassigned\n\n\n6\n85\nChloroflexi\n\n\n7\n99\nEuryarchaeota\n\n\n8\n114\nThaumarchaeota\n\n\n9\n126\nVerrucomicrobia\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_8:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n1\nCyanobacteria\n\n\n1\n142\nBacteria phylum incertae sedis\n\n\n2\n99\nEuryarchaeota\n\n\n3\n131\nBacteroidetes\n\n\n4\n100\nChlorophyta\n\n\n5\n90\nActinobacteria\n\n\n6\n85\nChloroflexi\n\n\n7\n114\nThaumarchaeota\n\n\n8\n126\nVerrucomicrobia\n\n\n9\n3\nProteobacteria\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_9:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n144\nunassigned\n\n\n1\n1\nCyanobacteria\n\n\n2\n142\nBacteria phylum incertae sedis\n\n\n3\n126\nVerrucomicrobia\n\n\n4\n131\nBacteroidetes\n\n\n5\n85\nChloroflexi\n\n\n6\n3\nProteobacteria\n\n\n7\n114\nThaumarchaeota\n\n\n8\n90\nActinobacteria\n\n\n9\n100\nChlorophyta\n\n\n\n\n\n\n\n\nTabla de asociación para Factor_10:\n\n\n\n\n\n\n\n\n\nFeature_number\nFeature_name\n\n\n\n\n0\n85\nChloroflexi\n\n\n1\n114\nThaumarchaeota\n\n\n2\n90\nActinobacteria\n\n\n3\n144\nunassigned\n\n\n4\n142\nBacteria phylum incertae sedis\n\n\n5\n3\nProteobacteria\n\n\n6\n131\nBacteroidetes\n\n\n7\n99\nEuryarchaeota\n\n\n8\n5\nNitrospinae\n\n\n9\n112\nCandidatus Marinimicrobia"
  },
  {
    "objectID": "reports/pca.html",
    "href": "reports/pca.html",
    "title": "PCA",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nfrom sklearn.decomposition import PCA\nimport matplotlib.pyplot as plt\n\n\ndata_dir = \"../data/\"\nM_all = pd.read_csv(f\"{data_dir}M_all.csv\", index_col=0)\nM_all.head(3)\n\n\n\n\n\n\n\n\nabfd\nacs\nacsb\napca\napcf\napra\naprb\ncoxl\ncoxm\ncoxs\n...\nBacteria phylum [Chlorobi/Ignavibacteriae]\nBacteria phylum [Firmicutes/Actinobacteria]\nBacteria phylum [Nitrospirae/Bacteroidetes]\nBacteria phylum [Proteobacteria/Actinobacteria]\nBacteria phylum [Proteobacteria/Armatimonadetes]\nBacteria phylum [Proteobacteria/Chloroflexi]\nBacteria phylum [Proteobacteria/Firmicutes]\nBacteria phylum incertae sedis\nUnknown cellular organism phylum incertae sedis\nunassigned.1\n\n\n\n\nS10_Z00\n359.26500\n160.26942\n13.03536\n551.80506\n503.93206\n31.17031\n2745.90727\n2193.68913\n2646.25809\n1990.82600\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.068940\n0.0\n0.344094\n\n\nS10_Z01\n13.43326\n104.11034\n15.99147\n376.32500\n576.59155\n3.81675\n3808.86923\n1847.60399\n2872.41969\n1779.57401\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.115069\n0.0\n0.372401\n\n\nS10_Z05\n207.26238\n10.41636\n6.92328\n29.61720\n40.69934\n17.56785\n3565.34567\n2312.78238\n3963.81748\n1847.62309\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.080827\n0.0\n0.387987\n\n\n\n\n3 rows × 4425 columns\n\n\n\n\npca = PCA(n_components=15)\npca.fit(M_all)\npca_transformed = pca.transform(M_all)\npca_dict = dict()\nfor i in range(15):\n    pca_dict[i + 1] = pca_transformed[:, : i + 1]\npca_explained_variance = np.cumsum(pca.explained_variance_ratio_)\n\n\nM_pca_pd = pd.DataFrame(pca_transformed, index=M_all.index)\nM_pca_pd.columns = [f\"PCA{i + 1}\" for i in range(M_pca_pd.shape[1])]\nM_pca_pd.to_csv(f\"{data_dir}M_pca.csv\")\n\n\nplt.figure(figsize=(10, 6))\nplt.plot(pca_dict.keys(), pca_explained_variance, marker=\"o\")\nplt.title(\"PCA Explained Variance\")\nplt.xticks(list(pca_dict.keys()))\nplt.xlabel(\"Number of Components\")\nplt.ylabel(\"Explained Variance\")\nplt.grid()\nplt.show()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Integración de datos “ómicos” del océano costero chileno con la ayuda de aprendizaje de máquinas",
    "section": "",
    "text": "Data pipeline\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPCA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMOFA\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMOFA & PCA analysis\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "reports/data_pipeline.html",
    "href": "reports/data_pipeline.html",
    "title": "Data pipeline",
    "section": "",
    "text": "import pandas as pd\n\n\ndata_dir = \"../data/\"\nM_biogeochemical_genes_raw_pd = pd.read_csv(\n    f\"{data_dir}{'M_biogeochemical_genes_raw'}.tsv\", sep=\"\\t\", index_col=\"TSC\"\n)\nM_metabolic_genes_raw_pd = pd.read_csv(\n    f\"{data_dir}{'M_metabolic_genes_raw'}.tsv\", sep=\"\\t\", index_col=\"TSC\"\n)\nM_Taxa_order_pd = pd.read_csv(\n    f\"{data_dir}{'Matriz_Taxa-order'}.tsv\", sep=\"\\t\", index_col=\"Taxonomy\"\n).T\nM_Taxa_phylum_pd = pd.read_csv(\n    f\"{data_dir}{'Matriz_Taxa-phylum'}.tsv\", sep=\"\\t\", index_col=\"Taxonomy\"\n).T\nM_all = pd.concat(\n    [\n        M_biogeochemical_genes_raw_pd,\n        M_metabolic_genes_raw_pd,\n        M_Taxa_order_pd,\n        M_Taxa_phylum_pd,\n    ],\n    axis=1,\n    join=\"inner\",\n)\n\n\nprint(\"Shape: \", str(M_all.shape))\nM_all.to_csv(f\"{data_dir}M_all.csv\")\nM_all.head(3)\n\nShape:  (159, 4425)\n\n\n\n\n\n\n\n\n\nabfd\nacs\nacsb\napca\napcf\napra\naprb\ncoxl\ncoxm\ncoxs\n...\nBacteria phylum [Chlorobi/Ignavibacteriae]\nBacteria phylum [Firmicutes/Actinobacteria]\nBacteria phylum [Nitrospirae/Bacteroidetes]\nBacteria phylum [Proteobacteria/Actinobacteria]\nBacteria phylum [Proteobacteria/Armatimonadetes]\nBacteria phylum [Proteobacteria/Chloroflexi]\nBacteria phylum [Proteobacteria/Firmicutes]\nBacteria phylum incertae sedis\nUnknown cellular organism phylum incertae sedis\nunassigned\n\n\n\n\nS10_Z00\n359.26500\n160.26942\n13.03536\n551.80506\n503.93206\n31.17031\n2745.90727\n2193.68913\n2646.25809\n1990.82600\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.068940\n0.0\n0.344094\n\n\nS10_Z01\n13.43326\n104.11034\n15.99147\n376.32500\n576.59155\n3.81675\n3808.86923\n1847.60399\n2872.41969\n1779.57401\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.115069\n0.0\n0.372401\n\n\nS10_Z05\n207.26238\n10.41636\n6.92328\n29.61720\n40.69934\n17.56785\n3565.34567\n2312.78238\n3963.81748\n1847.62309\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.080827\n0.0\n0.387987\n\n\n\n\n3 rows × 4425 columns\n\n\n\n\nprint(\"Biogeochemical genes shape: \", str(M_biogeochemical_genes_raw_pd.shape))\nM_biogeochemical_genes_raw_pd.to_csv(f\"{data_dir}M_biogeochemical_genes.csv\")\nM_biogeochemical_genes_raw_pd.head(3)\n\nBiogeochemical genes shape:  (159, 53)\n\n\n\n\n\n\n\n\n\nabfd\nacs\nacsb\napca\napcf\napra\naprb\ncoxl\ncoxm\ncoxs\n...\npeth\nprkb\npsaa\npsba\npufm\nrbcl\nrbcs\nsat\nsir\nsuox\n\n\nTSC\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nS10_Z00\n359.26500\n160.26942\n13.03536\n551.80506\n503.93206\n31.17031\n2745.90727\n2193.68913\n2646.25809\n1990.82600\n...\n753.12482\n578.64676\n751.26299\n391.39658\n1211.17597\n263.23020\n601.13471\n1899.31977\n1748.68208\n30.37250\n\n\nS10_Z01\n13.43326\n104.11034\n15.99147\n376.32500\n576.59155\n3.81675\n3808.86923\n1847.60399\n2872.41969\n1779.57401\n...\n494.64409\n535.00770\n667.16508\n613.87983\n693.63110\n267.17403\n696.82120\n3360.56333\n1381.66879\n20.22587\n\n\nS10_Z05\n207.26238\n10.41636\n6.92328\n29.61720\n40.69934\n17.56785\n3565.34567\n2312.78238\n3963.81748\n1847.62309\n...\n30.93330\n178.00411\n43.85765\n12.39310\n117.83646\n39.76609\n29.51159\n4566.57900\n132.59523\n7.31381\n\n\n\n\n3 rows × 53 columns\n\n\n\n\nprint(\"Metabolic genes shape: \", str(M_metabolic_genes_raw_pd.shape))\nM_metabolic_genes_raw_pd.to_csv(f\"{data_dir}M_metabolic_genes.csv\")\nM_metabolic_genes_raw_pd.head(3)\n\nMetabolic genes shape:  (159, 3821)\n\n\n\n\n\n\n\n\n\n4cl\n4hbd\na3galt2\na4galt\naaat\naacs\naadat\naae7\naanat\naao\n...\nyrrt\nysaa\nyvgn\nyvof\nywte\nyxei\nzadh2\nzds\nzep\nzwf\n\n\nTSC\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nS10_Z00\n166.18297\n0.0\n3.1674\n0.0\n0.0\n0.00000\n0.00000\n0.00000\n13.46850\n317.64736\n...\n74.9508\n152.42642\n57.07226\n21.63806\n0.0000\n0.0\n13.92290\n3.98649\n0.0\n4494.18542\n\n\nS10_Z01\n107.94783\n0.0\n0.0000\n0.0\n0.0\n40.27773\n17.88460\n28.03790\n12.76687\n730.06630\n...\n14.2651\n321.58204\n116.87789\n25.77375\n0.0000\n0.0\n44.62057\n0.00000\n0.0\n3129.90803\n\n\nS10_Z05\n58.20414\n0.0\n0.0000\n0.0\n0.0\n9.75746\n20.48633\n6.23535\n0.00000\n407.11690\n...\n0.0000\n151.68520\n104.82646\n0.00000\n11.6619\n0.0\n7.95161\n0.00000\n0.0\n1795.49998\n\n\n\n\n3 rows × 3821 columns\n\n\n\n\nprint(\"Taxa order shape: \", str(M_Taxa_order_pd.shape))\nM_Taxa_order_pd.to_csv(f\"{data_dir}M_Taxa_order.csv\")\nM_Taxa_order_pd.head(3)\n\nTaxa order shape:  (159, 406)\n\n\n\n\n\n\n\n\nTaxonomy\nNitrososphaerales\nChthonomonadales\nBacteroidetes Order II. Incertae sedis\nChroococcales\nPlanctomycetales\nCandidatus Brocadiales\nDesulfurococcales\nOscillatoriales\nNostocales\nDeinococcales\n...\nUnknown cellular organism order incertae sedis\nVerrucomicrobia order incertae sedis\nVerrucomicrobiae order incertae sedis\nZetaproteobacteria order incertae sedis\ncandidate division CPR3 order incertae sedis\ncandidate division NC10 order incertae sedis\ncandidate division WOR-3 order incertae sedis\ncandidate division WWE3 order incertae sedis\ncandidate division Zixibacteria order incertae sedis\nunassigned\n\n\n\n\nS10_Z00\n0.0\n0.0\n0.0\n0.0\n0.000721\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.010844\n0.000000\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.344094\n\n\nS10_Z01\n0.0\n0.0\n0.0\n0.0\n0.001265\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.006697\n0.000013\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.372401\n\n\nS10_Z05\n0.0\n0.0\n0.0\n0.0\n0.000871\n0.0\n0.0\n0.0\n0.0\n0.0\n...\n0.0\n0.006435\n0.000223\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.387987\n\n\n\n\n3 rows × 406 columns\n\n\n\n\nprint(\"Taxa phylum shape: \", str(M_Taxa_phylum_pd.shape))\nM_Taxa_phylum_pd.to_csv(f\"{data_dir}M_Taxa_phylum.csv\")\nM_Taxa_phylum_pd.head(3)\n\nTaxa phylum shape:  (159, 145)\n\n\n\n\n\n\n\n\nTaxonomy\nChlorobi\nCyanobacteria\nIgnavibacteriae\nProteobacteria\nFirmicutes\nNitrospinae\nDeinococcus-Thermus\nKiritimatiellaeota\ncandidate division Zixibacteria\nGemmatimonadetes\n...\nBacteria phylum [Chlorobi/Ignavibacteriae]\nBacteria phylum [Firmicutes/Actinobacteria]\nBacteria phylum [Nitrospirae/Bacteroidetes]\nBacteria phylum [Proteobacteria/Actinobacteria]\nBacteria phylum [Proteobacteria/Armatimonadetes]\nBacteria phylum [Proteobacteria/Chloroflexi]\nBacteria phylum [Proteobacteria/Firmicutes]\nBacteria phylum incertae sedis\nUnknown cellular organism phylum incertae sedis\nunassigned\n\n\n\n\nS10_Z00\n0.0\n0.023650\n0.0\n0.360825\n0.000015\n0.001655\n0.0\n0.0\n0.0\n0.00000\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.068940\n0.0\n0.344094\n\n\nS10_Z01\n0.0\n0.020417\n0.0\n0.296810\n0.000026\n0.004243\n0.0\n0.0\n0.0\n0.00000\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.115069\n0.0\n0.372401\n\n\nS10_Z05\n0.0\n0.001376\n0.0\n0.278321\n0.000065\n0.008446\n0.0\n0.0\n0.0\n0.00024\n...\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.0\n0.080827\n0.0\n0.387987\n\n\n\n\n3 rows × 145 columns"
  },
  {
    "objectID": "reports/mofa.html",
    "href": "reports/mofa.html",
    "title": "MOFA",
    "section": "",
    "text": "import pandas as pd\nimport scanpy as sc\nimport muon as mu\nimport mofax as mofa\nimport matplotlib.pyplot as plt\nimport os\n\n\ndata_dir = \"../data/\"\nM_biogeochemical_genes = sc.AnnData(\n    pd.read_csv(f\"{data_dir}M_biogeochemical_genes.csv\", index_col=0)\n)\nM_metabolic_genes = sc.AnnData(\n    pd.read_csv(f\"{data_dir}M_metabolic_genes.csv\", index_col=0)\n)\nM_Taxa_order = sc.AnnData(pd.read_csv(f\"{data_dir}M_Taxa_order.csv\", index_col=0))\nM_Taxa_phylum = sc.AnnData(pd.read_csv(f\"{data_dir}M_Taxa_phylum.csv\", index_col=0))\nmdata = mu.MuData(\n    {\n        \"biogeochemical_genes\": M_biogeochemical_genes,\n        \"metabolic_genes\": M_metabolic_genes,\n        \"Taxa_order\": M_Taxa_order,\n        \"Taxa_phylum\": M_Taxa_phylum,\n    }\n)\nmdata\n\n/home/davidnfu0/.conda/envs/MOFA/lib/python3.13/site-packages/mudata/_core/mudata.py:1598: FutureWarning: From 0.4 .update() will not pull obs/var columns from individual modalities by default anymore. Set mudata.set_options(pull_on_update=False) to adopt the new behaviour, which will become the default. Use new pull_obs/pull_var and push_obs/push_var methods for more flexibility.\n  self._update_attr(\"var\", axis=0, join_common=join_common)\n/home/davidnfu0/.conda/envs/MOFA/lib/python3.13/site-packages/mudata/_core/mudata.py:963: UserWarning: Cannot join columns with the same name because var_names are intersecting.\n  warnings.warn(\n/home/davidnfu0/.conda/envs/MOFA/lib/python3.13/site-packages/mudata/_core/mudata.py:1461: FutureWarning: From 0.4 .update() will not pull obs/var columns from individual modalities by default anymore. Set mudata.set_options(pull_on_update=False) to adopt the new behaviour, which will become the default. Use new pull_obs/pull_var and push_obs/push_var methods for more flexibility.\n  self._update_attr(\"obs\", axis=1, join_common=join_common)\n\n\nMuData object with n_obs × n_vars = 159 × 4425\n  4 modalities\n    biogeochemical_genes:   159 x 53\n    metabolic_genes:    159 x 3821\n    Taxa_order: 159 x 406\n    Taxa_phylum:    159 x 145\n\n\n\nmodel_dir = \"../models/\"\nmodel_path = f\"{model_dir}mofa_model.hdf5\"\nif not os.path.exists(model_path):\n    mu.tl.mofa(\n        mdata,\n        use_obs=\"union\",\n        n_factors=15,\n        convergence_mode=\"medium\",\n        outfile=model_path,\n    )\n\n\nmodel = mofa.mofa_model(f\"{model_dir}mofa_model.hdf5\")\n\n\nZ = model.get_factors()\nZ_df = pd.DataFrame(Z)\nZ_df.columns = [f\"Factor_{i + 1}\" for i in range(Z_df.shape[1])]\nZ_df.index = mdata.obs_names\nZ_df.to_csv(f\"{data_dir}M_factors.csv\")\nZ_df.head(3)\n\n\n\n\n\n\n\n\nFactor_1\nFactor_2\nFactor_3\nFactor_4\nFactor_5\nFactor_6\nFactor_7\nFactor_8\nFactor_9\nFactor_10\nFactor_11\nFactor_12\nFactor_13\nFactor_14\nFactor_15\n\n\n\n\nS10_Z00\n4.724933\n3.968908\n0.797572\n5.482708\n-8.875764\n2.163804\n9.299741\n-7.932719\n-3.359381\n0.207483\n-3.485415\n-10.016900\n9.756227\n-0.679190\n-3.387503\n\n\nS10_Z01\n2.759740\n3.997023\n-1.886472\n-1.167443\n-1.421978\n-4.101673\n2.941677\n-4.076530\n-6.615667\n-2.653511\n-1.781186\n-4.384499\n-2.066231\n4.447014\n-1.448978\n\n\nS10_Z05\n-0.914682\n-1.277816\n-1.905949\n-1.360933\n2.930430\n0.920359\n-2.889056\n-2.455813\n-1.206773\n-5.162259\n0.304318\n-0.198986\n-0.322285\n0.232198\n0.485406\n\n\n\n\n\n\n\n\nvariance_explained = model.get_r2()\nvariance_explained.drop(columns=[\"Group\"], inplace=True)\nvariance_explained[\"Factor\"] = variance_explained[\"Factor\"].str.replace(\n    r\"Factor(\\d{1})$\", r\"Factor0\\1\", regex=True\n)\nvariance_explained_pivot = variance_explained.pivot(\n    index=\"Factor\", columns=\"View\", values=\"R2\"\n)\nvariance_explained_pivot.to_csv(f\"{data_dir}M_variance_explained.csv\")\nvariance_explained_pivot\n\n\n\n\n\n\n\nView\nTaxa_order\nTaxa_phylum\nbiogeochemical_genes\nmetabolic_genes\n\n\nFactor\n\n\n\n\n\n\n\n\nFactor01\n30.416582\n30.452293\n26.947655\n14.821787\n\n\nFactor02\n2.366674\n4.064791\n27.927259\n61.776462\n\n\nFactor03\n8.859108\n20.269287\n10.133883\n6.894192\n\n\nFactor04\n13.666444\n6.419329\n7.018835\n4.626806\n\n\nFactor05\n7.007026\n1.395295\n5.240353\n2.195229\n\n\nFactor06\n3.172603\n1.894996\n4.941252\n1.188168\n\n\nFactor07\n1.891422\n4.736054\n3.130174\n0.803997\n\n\nFactor08\n1.694297\n1.496631\n1.707164\n0.566008\n\n\nFactor09\n2.003067\n1.909097\n-0.004459\n0.149767\n\n\nFactor10\n1.337759\n0.200886\n1.398172\n0.376261\n\n\nFactor11\n1.401618\n0.524096\n0.730124\n0.377024\n\n\nFactor12\n0.887211\n0.557009\n0.680334\n0.616317\n\n\nFactor13\n0.869182\n0.983265\n0.362286\n0.232789\n\n\nFactor14\n0.483781\n0.623047\n0.424291\n0.275356\n\n\nFactor15\n0.656530\n0.252753\n0.486960\n0.169731\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 6))\nplt.imshow(variance_explained_pivot, aspect=\"auto\", cmap=\"Blues\")\nplt.xticks(\n    ticks=range(len(variance_explained_pivot.columns)),\n    labels=variance_explained_pivot.columns,\n    rotation=45,\n)\nplt.yticks(\n    ticks=range(len(variance_explained_pivot.index)),\n    labels=variance_explained_pivot.index,\n)\nplt.colorbar(label=\"R2 (%)\")\nplt.title(\"Variance Explained per Factor and View\")\nplt.tight_layout()\n\n\n\n\n\n\n\n\n\nW = model.get_weights()\n\nn_bio = M_biogeochemical_genes.n_vars\nn_met = M_metabolic_genes.n_vars\nn_order = M_Taxa_order.n_vars\nn_phylum = M_Taxa_phylum.n_vars\n\nidx_bio = slice(0, n_bio)\nidx_met = slice(n_bio, n_bio + n_met)\nidx_order = slice(n_bio + n_met, n_bio + n_met + n_order)\nidx_phylum = slice(n_bio + n_met + n_order, n_bio + n_met + n_order + n_phylum)\n\nW_bio = W[idx_bio, :]\nW_met = W[idx_met, :]\nW_order = W[idx_order, :]\nW_phylum = W[idx_phylum, :]\n\ndf_W_biogeochemical_genes = pd.DataFrame(\n    W_bio,\n    index=M_biogeochemical_genes.var_names,\n    columns=[f\"Factor_{i + 1}\" for i in range(W.shape[1])],\n)\ndf_W_biogeochemical_genes.to_csv(f\"{data_dir}W_biogeochemical_genes.csv\")\ndf_W_metabolic_genes = pd.DataFrame(\n    W_met,\n    index=M_metabolic_genes.var_names,\n    columns=[f\"Factor_{i + 1}\" for i in range(W.shape[1])],\n)\ndf_W_metabolic_genes.to_csv(f\"{data_dir}W_metabolic_genes.csv\")\ndf_W_Taxa_order = pd.DataFrame(\n    W_order,\n    index=M_Taxa_order.var_names,\n    columns=[f\"Factor_{i + 1}\" for i in range(W.shape[1])],\n)\ndf_W_Taxa_order.to_csv(f\"{data_dir}W_Taxa_order.csv\")\ndf_W_Taxa_phylum = pd.DataFrame(\n    W_phylum,\n    index=M_Taxa_phylum.var_names,\n    columns=[f\"Factor_{i + 1}\" for i in range(W.shape[1])],\n)\ndf_W_Taxa_phylum.to_csv(f\"{data_dir}W_Taxa_phylum.csv\")"
  }
]